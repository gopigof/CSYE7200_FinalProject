<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="7991d91a-92f5-47bf-b32b-891361e75d97" name="Changes" comment="[Feat] Dockerized Scala application">
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/.env" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/.gitattributes" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/docker-compose.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/elasticsearch/.dockerignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/elasticsearch/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/elasticsearch/config/elasticsearch.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/extensions/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/extensions/curator/.dockerignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/extensions/curator/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/extensions/curator/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/extensions/curator/config/curator.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/extensions/curator/config/delete_log_files_curator.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/extensions/curator/curator-compose.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/extensions/enterprise-search/.dockerignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/extensions/enterprise-search/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/extensions/enterprise-search/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/extensions/enterprise-search/config/enterprise-search.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/extensions/enterprise-search/enterprise-search-compose.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/extensions/filebeat/.dockerignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/extensions/filebeat/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/extensions/filebeat/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/extensions/filebeat/config/filebeat.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/extensions/filebeat/filebeat-compose.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/extensions/fleet/.dockerignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/extensions/fleet/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/extensions/fleet/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/extensions/fleet/agent-apmserver-compose.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/extensions/fleet/fleet-compose.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/extensions/heartbeat/.dockerignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/extensions/heartbeat/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/extensions/heartbeat/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/extensions/heartbeat/config/heartbeat.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/extensions/heartbeat/heartbeat-compose.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/extensions/logspout/.dockerignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/extensions/logspout/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/extensions/logspout/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/extensions/logspout/build.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/extensions/logspout/logspout-compose.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/extensions/logspout/modules.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/extensions/metricbeat/.dockerignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/extensions/metricbeat/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/extensions/metricbeat/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/extensions/metricbeat/config/metricbeat.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/extensions/metricbeat/metricbeat-compose.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/kibana/.dockerignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/kibana/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/kibana/config/kibana.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/logstash/.dockerignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/logstash/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/logstash/config/logstash.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/logstash/pipeline/logstash.conf" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/setup/.dockerignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/setup/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/setup/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/setup/entrypoint.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/setup/lib.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/setup/roles/filebeat_writer.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/setup/roles/heartbeat_writer.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/setup/roles/logstash_writer.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-elk-stack/setup/roles/metricbeat_writer.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="SBT">
      <state>
        <projects_view>
          <tree_state>
            <expand>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="CSYE7200_FinalProject" type="f1a62948:ProjectNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="CSYE7200_FinalProject" type="f1a62948:ProjectNode" />
                <item name="CSYE7200_FinalProject" type="2d1252cf:ModuleNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="CSYE7200_FinalProject" type="f1a62948:ProjectNode" />
                <item name="CSYE7200_FinalProject" type="2d1252cf:ModuleNode" />
                <item name="Dependencies" type="6de06a37:ExternalSystemViewDefaultContributor$MyDependenciesNode" />
              </path>
            </expand>
            <select />
          </tree_state>
        </projects_view>
      </state>
    </system>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectCodeStyleSettingsMigration">
    <option name="version" value="2" />
  </component>
  <component name="ProjectId" id="2OWkTqAd2X5AklWE4GVDw12Ip6D" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "WebServerToolWindowFactoryState": "false",
    "last_opened_file_path": "D:/Code/Scala/CSYE7200_FinalProject/docker-elk-stack",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "project.structure.last.edited": "Libraries",
    "project.structure.proportion": "0.0",
    "project.structure.side.proportion": "0.2",
    "settings.editor.selected.configurable": "preferences.lookFeel",
    "vue.rearranger.settings.migration": "true"
  },
  "keyToStringList": {
    "com.intellij.ide.scratch.ScratchImplUtil$2/New Scratch File": [
      "TEXT"
    ]
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="D:\Code\Scala\CSYE7200_FinalProject\docker-elk-stack" />
    </key>
  </component>
  <component name="RunManager">
    <configuration name="Entry" type="Application" factoryName="Application" temporary="true">
      <option name="MAIN_CLASS_NAME" value="edu.neu.coe.csye7200.Entry" />
      <module name="CSYE7200_FinalProject" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="edu.neu.coe.csye7200.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Application.Entry" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="7991d91a-92f5-47bf-b32b-891361e75d97" name="Changes" comment="" />
      <created>1681683736506</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1681683736506</updated>
      <workItem from="1681683737771" duration="1890000" />
      <workItem from="1681696593732" duration="16564000" />
    </task>
    <task id="LOCAL-00001" summary="[Feat] Dockerized Scala application">
      <created>1681761078916</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1681761078916</updated>
    </task>
    <option name="localTasksCounter" value="2" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="[Feat] Dockerized Scala application" />
    <option name="LAST_COMMIT_MESSAGE" value="[Feat] Dockerized Scala application" />
  </component>
</project>